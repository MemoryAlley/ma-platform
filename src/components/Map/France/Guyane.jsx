import { useClickOutside, useDisclosure, useHover } from "@mantine/hooks";
import React from "react";
import { Colors } from "@/utils/ui/colors";
import MapPopup from "../Popup/MapPopup";

function Guyane() {
  const { hovered, ref } = useHover();
  const [opened, handlers] = useDisclosure(false)
  const refPopup = useClickOutside(() => handlers.close());

  return <MapPopup refPop={refPopup} regionName="Guyane">
    <path onClickCapture={handlers.open} id="guyane" style={{ cursor: 'pointer' }} ref={ref} fill={hovered || opened ? Colors.primary : "white"} stroke={hovered || opened ? "black" : Colors.strokeMap} strokeWidth={hovered || opened ? "3" : "2"} d="M570.268 980.133l.024-.006.758.233.118.014.624-.107.376-.335.62-1.579 1.602-.393 1.274-1.244 2.254-4.83 1.799-2.436.588-1.511.341-.25.038-.48-.401-.574.687-1.74-.014-.338-.467-.547.318-.486-.362-1.205.171-1.387-.327-.5-.335-.102.623-1.258 1.508-2.063.865-.646.615-1.667.846-.884.461-1.082-.061-1.949.432-1.961-.173-.456-.723-.588-.684.102-.533-.81-.488-1.7-.802-1.109-1.565-.697-.618-1.006-.678-.505-.561-1.055-.67-.67-.437-1.112-1.027-1.096.467-2.076-.091-.62-1.691-1.049.321-1.846-.239-1.134-.728-1.521-.417-2.579.656-1.867.008-1.131-.352-1.104.014-1.598-1.013-1.006v-3.012l-.187-.555.867-.841-.159-1.39.179-.67 1.991-2.752.541-.439.807-1.732 3.397-2.955 1.609-.854 1.153-1.406 1.364-3.073.379-2.543 1.065-1.864 1.846.261 1.28.478.184-.261 2.477 1.489 4.957 2.273 2.222.277 2.549.643.626-.05 1.317 1.035.55-.178.203-.278-.08-.39.439.118 2.337 1.288 1.912.538.323-.146 2.263 1.208 1.623 1.552 1.132.629.769 1.23 5.443 4.772.238.561 1.044.297 1.843 1.576.464.774-.195.895.435.308 1.466-1.287.874.387.396.709-2.019 3.119.027 1.074.288.264.439-.234.39-.675.418-1.42 1.535-1.302.637.461.879 1.379 1.587.909 1.65 1.535.646.955 1.093 4.743-.236.978-1.395.997-.648.823-.005.341.329.107 1.532-.486.841-.445.464-.609.387-1.497-.206-3.545.473-1.428.767-.146 1.436 1.2v.549l.821 1.382.203 1.331.483.648-.184.271.194.685.368.482.75.146-.503.623-.065 1.024 1.434 2.499.135.615-.044 1.573-.465 1.458-.22.42-1.752.865-.755.673-1.247 2.729-1.532 1.691-.985.607-.091 1.032-.646.176-.491.497-.643 2.164-1.444 2.431-.569.461.025.538-3.257 5.36-.409.308-.824.085-.563.524-.465 1.102-.924.744-.173.58.225 1.694-1.688 3.221.241.698-1.019.769-2.153 5.231-.793.434.488 1.585-1.549 2.604-.887.779-1.25 1.747-3.816 2.092-.5.438-.612 1.301-1.582.682-1.873-.305-1.4-.821-3.704.568 1.027-.805-.1-.475-1.521-1.277-.643-.879-.631-.329-.313.058-.824 1.043-1.996 1.151-1.557.247-1.109-.55-1.612-.2-1.617-.703-.635-.038.165-.89-.434-.5-.553-.099-.967.395-.766 1.074-.926.197-.714.888-.906-.03-.356 1.189-.333.238-1.436.717-.514-.233-.846.167-.638 1.464-.615.283-1.257-1.225-1.939.311-1.167-.151-1.478-1.03-2.487-.428-1.357-1.104.253-.505-.439-.437-1.232-.67-.02-.025v-.003z" />
  </MapPopup>
}

export default Guyane;
